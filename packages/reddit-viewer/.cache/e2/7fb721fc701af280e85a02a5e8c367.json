{"id":"node_modules/@sentry/core/esm/sdk.js","dependencies":[{"name":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/core/esm/sdk.js.map","includedInParent":true,"mtime":1565256417082},{"name":"/home/s/repos/now/packages/reddit-viewer/package.json","includedInParent":true,"mtime":1565256552351},{"name":"/home/s/repos/now/packages/reddit-viewer/.babelrc","includedInParent":true,"mtime":1555741353703},{"name":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/core/package.json","includedInParent":true,"mtime":1565256417082},{"name":"@sentry/hub","loc":{"line":1,"column":30},"parent":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/core/esm/sdk.js","resolved":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/hub/esm/index.js"},{"name":"@sentry/utils","loc":{"line":2,"column":23},"parent":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/core/esm/sdk.js","resolved":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/utils/esm/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initAndBind = initAndBind;\n\nvar _hub = require(\"@sentry/hub\");\n\nvar _utils = require(\"@sentry/utils\");\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(clientClass, options) {\n  if (options.debug === true) {\n    _utils.logger.enable();\n  }\n\n  (0, _hub.getCurrentHub)().bindClient(new clientClass(options));\n}","map":{"mappings":[{"source":"../src/sdk.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/sdk.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/sdk.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":12,"column":0}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":6},"generated":{"line":19,"column":0}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":16},"generated":{"line":19,"column":9}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":6},"generated":{"line":19,"column":20}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":65},"generated":{"line":19,"column":21}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":6},"generated":{"line":19,"column":32}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":97},"generated":{"line":19,"column":34}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":6},"generated":{"line":19,"column":41}},{"source":"../src/sdk.ts","name":null,"original":{"line":15,"column":107},"generated":{"line":19,"column":43}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":20,"column":0}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":20,"column":6}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":13},"generated":{"line":20,"column":13}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":20,"column":14}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":20,"column":19}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":24},"generated":{"line":20,"column":24}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":20,"column":28}},{"source":"../src/sdk.ts","name":null,"original":{"line":16,"column":30},"generated":{"line":20,"column":30}},{"source":"../src/sdk.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":21,"column":0}},{"source":"../src/sdk.ts","name":null,"original":{"line":17,"column":11},"generated":{"line":21,"column":18}},{"source":"../src/sdk.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":21,"column":24}},{"source":"../src/sdk.ts","name":null,"original":{"line":18,"column":3},"generated":{"line":22,"column":0}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":24,"column":0}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":18},"generated":{"line":24,"column":28}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":24,"column":38}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":24,"column":39}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":33},"generated":{"line":24,"column":43}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":24,"column":54}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":45},"generated":{"line":24,"column":55}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":24,"column":62}},{"source":"../src/sdk.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":24,"column":63}},{"source":"../src/sdk.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":25,"column":0}}],"sources":{"../src/sdk.ts":"import { getCurrentHub } from '@sentry/hub';\nimport { Client, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instanciate Client objects. */\nexport type ClientClass<F extends Client, O extends Options> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends Options>(clientClass: ClientClass<F, O>, options: O): void {\n  if (options.debug === true) {\n    logger.enable();\n  }\n  getCurrentHub().bindClient(new clientClass(options));\n}\n"},"lineCount":null}},"hash":"5102ae9481240e0c90e9b7c18e810e0a","cacheData":{"env":{}}}