{"id":"node_modules/@sentry/types/esm/index.js","dependencies":[{"name":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/types/esm/index.js.map","includedInParent":true,"mtime":1565256417083},{"name":"/home/s/repos/now/packages/reddit-viewer/package.json","includedInParent":true,"mtime":1565256552351},{"name":"/home/s/repos/now/packages/reddit-viewer/.babelrc","includedInParent":true,"mtime":1555741353703},{"name":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/types/package.json","includedInParent":true,"mtime":1565256417083},{"name":"./loglevel","loc":{"line":1,"column":25},"parent":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/types/esm/index.js","resolved":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/types/esm/loglevel.js"},{"name":"./severity","loc":{"line":2,"column":25},"parent":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/types/esm/index.js","resolved":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/types/esm/severity.js"},{"name":"./status","loc":{"line":3,"column":23},"parent":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/types/esm/index.js","resolved":"/home/s/repos/now/packages/reddit-viewer/node_modules/@sentry/types/esm/status.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"LogLevel\", {\n  enumerable: true,\n  get: function () {\n    return _loglevel.LogLevel;\n  }\n});\nObject.defineProperty(exports, \"Severity\", {\n  enumerable: true,\n  get: function () {\n    return _severity.Severity;\n  }\n});\nObject.defineProperty(exports, \"Status\", {\n  enumerable: true,\n  get: function () {\n    return _status.Status;\n  }\n});\n\nvar _loglevel = require(\"./loglevel\");\n\nvar _severity = require(\"./severity\");\n\nvar _status = require(\"./status\");","map":{"mappings":[{"source":"../src/index.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":25,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":27,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../src/index.ts":"export { Breadcrumb, BreadcrumbHint } from './breadcrumb';\nexport { Client } from './client';\nexport { Dsn, DsnComponents, DsnLike, DsnProtocol } from './dsn';\nexport { ExtendedError } from './error';\nexport { Event, EventHint } from './event';\nexport { EventProcessor } from './eventprocessor';\nexport { Exception } from './exception';\nexport { Hub } from './hub';\nexport { Integration, IntegrationClass } from './integration';\nexport { LogLevel } from './loglevel';\nexport { Mechanism } from './mechanism';\nexport { Options } from './options';\nexport { Package } from './package';\nexport { Request } from './request';\nexport { Response } from './response';\nexport { Scope } from './scope';\nexport { SdkInfo } from './sdkinfo';\nexport { Severity } from './severity';\nexport { Span } from './span';\nexport { StackFrame } from './stackframe';\nexport { Stacktrace } from './stacktrace';\nexport { Status } from './status';\nexport { Thread } from './thread';\nexport { Transport, TransportOptions, TransportClass } from './transport';\nexport { User } from './user';\nexport { WrappedFunction } from './wrappedfunction';\n"},"lineCount":null}},"hash":"d895e521f257e2cbd0d05d2f26f788b0","cacheData":{"env":{}}}